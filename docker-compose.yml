# version: "3"
# volumes:
#   prometheus_data: {}

# services:
#   zipkin:
#     image: openzipkin/zipkin
#     environment:
#       - STORAGE_TYPE=mem
#     ports:
#       - "9411:9411"
# #    depends_on:
# #      - spring-cloud-discovery-service-service
#     networks:
#       - test-network





# #  grafana:
# #    image: grafana/grafana
# #    ports:
# #      - "3000:3000"
# #    depends_on:
# #      - prometheus
# #    networks:
# #      - test-network


# #   engine-service:
# #     image: engine-service
# #     environment:
# #       - JAVA_OPTS=
# #         -DEUREKA_SERVER=http://spring-cloud-discovery-service-service:8761/eureka
# #         -DZIPKIN_SERVER=http://zipkin:9411/
# #     ports:
# #       - "8800:8800"
# #     #    links:
# #     #      - zipkin
# #     depends_on:
# # #      - spring-cloud-discovery-service-service
# #       - zipkin
# #     #      - zipkin
# #     networks:
# #       - test-network


# #   fraud-microservice:
# #     image: fraud-service
# #     environment:
# #       - JAVA_OPTS=
# #         -DEUREKA_SERVER=http://spring-cloud-discovery-service-service:8761/eureka
# #         -DZIPKIN_SERVER=http://zipkin:9411/
# #     ports:
# #       - "8700:8700"
# #     #   links:
# #     #     - zipkin
# #     depends_on:
# #       - engine-service
# #       - zipkin
# #     #     - zipkin
# #     networks:
# #       - test-network


#   spring-cloud-discovery-service-service:
#     image: microservice-architecture/spring-cloud-discovery-service
#     ports:
#      - "8761:8761"
#     networks:
#      - test-network


#   spring-cloud-api-gateway-service:
#     image: microservice-architecture/spring-cloud-api-gateway-service
#     environment:
#       - JAVA_OPTS=
#         -DEUREKA_SERVER=http://spring-cloud-discovery-service-service:8761/eureka
#         -DZIPKIN_SERVER=http://zipkin:9411/
#     ports:
#       - "8900:8900"
#     #   links:
#     #     - zipkin
#     # depends_on:
#     #   - zipkin
#       # - engine-service
#       # - fraud-service
#     networks:
#       - test-network

#   spring-cloud-config-client:
#     image: microservice-architecture/spring-cloud-config-client
#     environment:
#       - JAVA_OPTS=
#         -DEUREKA_SERVER=http://spring-cloud-discovery-service-service:8761/eureka
#         -DZIPKIN_SERVER=http://zipkin:9411/
#     ports:
#       - "8100:8100"
#     #   links:
#     #     - zipkin
#     # depends_on:
#     #   - zipkin
#       # - engine-service
#       # - fraud-service
#     networks:
#       - test-network

#   spring-cloud-config-server:
#     image: microservice-architecture/spring-cloud-config-server
#     environment:
#       - JAVA_OPTS=
#         -DEUREKA_SERVER=http://spring-cloud-discovery-service-service:8761/eureka
#         -DZIPKIN_SERVER=http://zipkin:9411/
#     ports:
#       - "8888:8888"
#     #   links:
#     #     - zipkin
#     # depends_on:
#     #   - zipkin
#       # - engine-service
#       # - fraud-service
#     networks:
#       - test-network




# networks:
#   test-network:

version: "3.7"
volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  
  zipkin:
    image: openzipkin/zipkin
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411
    depends_on:
     - spring-cloud-discovery-service
    networks:
      - test-network

  alertmanager:
    container_name: alertmanager
    hostname: alertmanager
    image: prom/alertmanager
    volumes:
      - ./alertmanager.conf:/etc/alertmanager/alertmanager.conf
    command:
      - '--config.file=/etc/alertmanager/alertmanager.conf'
    ports:
      - 9093:9093
  
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=31d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - alertmanager:alertmanager
    depends_on:
      # - fraud-service
      - zipkin
    networks:
      - test-network

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    volumes:
      - ./grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000

  # DISCOVERY SERVICE
  spring-cloud-discovery-service:
    build:
      context: ./spring-cloud-discovery-service
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    environment:
      - DISCOVERY_URL=http://spring-cloud-discovery-service:8761
      - ZIPKIN_SERVER=http://zipkin:9411/
    networks:
      - test-network

  spring-cloud-config-server:
    build:
      context: ./spring-cloud-config-server
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    environment:
      - DISCOVERY_URL=http://spring-cloud-discovery-service:8761
      - ZIPKIN_SERVER=http://zipkin:9411/
    networks:
      - test-network


  # SERVICES
  fraud-service:
    build:
      context: ./fraud-service
      dockerfile: Dockerfile
    ports:
      - 8700:8700
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    environment:
      DISCOVERY_URL: http://spring-cloud-discovery-service:8761
      ZIPKIN_SERVER: http://zipkin:9411/
    links:
      - spring-cloud-discovery-service
    depends_on:
      - spring-cloud-discovery-service
    networks:
      - test-network
    

  engine-service:
    build:
      context: ./engine-service
      dockerfile: Dockerfile
    ports:
      - 8600:8600
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    environment:
      DISCOVERY_URL: http://spring-cloud-discovery-service:8761
      ZIPKIN_SERVER: http://zipkin:9411/
      FRAUD_URL: http://fraud-service:8700/
    links:
      - spring-cloud-discovery-service
      - fraud-service
    depends_on:
      - spring-cloud-discovery-service
      - fraud-service
    networks:
      - test-network


  # API GATEWAY
  spring-cloud-api-gateway-service:
    build:
      context: ./spring-cloud-api-gateway-service
      dockerfile: Dockerfile
    ports:
      - 8900:8900
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost || exit 1
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 10s
    environment:
      - DISCOVERY_URL=http://spring-cloud-discovery-service:8761
      - ZIPKIN_SERVER=http://zipkin:9411/
    links:
      - spring-cloud-config-server
      - spring-cloud-discovery-service
      - fraud-service
      - engine-service
    depends_on:
      - spring-cloud-discovery-service
    networks:
      - test-network

networks:
  test-network:
     driver: bridge